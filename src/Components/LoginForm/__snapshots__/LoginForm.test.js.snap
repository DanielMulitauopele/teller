// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    logInUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="login-form"
        onSubmit={[Function]}
      >
        <input
          className="form-input user-email"
          name="email"
          onChange={[Function]}
          placeholder="Email"
          value=""
        />
        <input
          className="form-input user-password"
          name="password"
          onChange={[Function]}
          placeholder="Password"
          type="password"
          value=""
        />
        <p
          className="login-button"
          onSubmit={[Function]}
        >
          Go
        </p>
      </form>,
      "className": "form-wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="form-input user-email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            value=""
          />,
          <input
            className="form-input user-password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />,
          <p
            className="login-button"
            onSubmit={[Function]}
          >
            Go
          </p>,
        ],
        "className": "login-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-input user-email",
            "name": "email",
            "onChange": [Function],
            "placeholder": "Email",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-input user-password",
            "name": "password",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Go",
            "className": "login-button",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": "Go",
          "type": "p",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="login-form"
          onSubmit={[Function]}
        >
          <input
            className="form-input user-email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            value=""
          />
          <input
            className="form-input user-password"
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          <p
            className="login-button"
            onSubmit={[Function]}
          >
            Go
          </p>
        </form>,
        "className": "form-wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="form-input user-email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              value=""
            />,
            <input
              className="form-input user-password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />,
            <p
              className="login-button"
              onSubmit={[Function]}
            >
              Go
            </p>,
          ],
          "className": "login-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-input user-email",
              "name": "email",
              "onChange": [Function],
              "placeholder": "Email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-input user-password",
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Go",
              "className": "login-button",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": "Go",
            "type": "p",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
